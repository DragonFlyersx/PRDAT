This is our answers for the HelloLex pdf in Assignment 2.

1
What are the regular expressions involved, and
which semantic values are they associated
with?
    - Regex: 
        ['0'-'9']
        _
    - Semantic Values: 
        LexBuffer<char>.LexemeString lexbuf
        failwith "Lexer error: illegal symbol"
        
2
How many states are there by the automaton of the
lexer? 
    - 3 states

You can find the generated files the HelloLex folder

It was generated by the command:
    dotnet C:\Users\Tipskind_Overkill\Documents\Repositorier\PRDAT\fsharp\FsLexYacc.11.3.0\build\fslex\net6.0\fslex.dll --unicode hello.fsl 

3
Below is copied from running hello.fs:
    dotnet run --project hello.fsproj
    Hello World from FsLex!
    
    Please pass a digit:
    2
    The lexer recognizes 2

4
Below is copied from running hello2.fs:
    dotnet run --project hello2.fsproj                                                                                                                                                                    
    Hello World from FsLex!
    
    Please pass a digit:
    34
    The lexer recognizes 34

5
Below is copied from running hello3.fs:
    dotnet run --project hello3.fsproj
    Hello World from FsLex!
    
    Please pass a digit:
    34.34
    The lexer recognizes 34.34

6
Consider the 3 examples of input provided at the prompt and
the result.
Explain why the results are expected behaviour from the lexer.

hello3
    - 34: 
    - 34.24:            Matches the second regex ['+''-']?(['0'-'9']*['.'])?['0'-'9']+
    - 34,344: 
    
    1: This is matched by the last part in the regex (['0'-'9']+) since it does NOT match either ['+''-']? or (['0'-'9']*['.'])?
    2: This is matched by the second and last part of the regex (['0'-'9']*['.'])?['0'-'9']+
       Where:
       - (['0'-'9']*['.'])? matches 34.
       - ['0'-'9']+ matches 24.
    3: The first part of the input (34) does not match the first or second part of the regex, but does match on ['0'-'9']+
       Since the comma is not a part of the regex, it stops there and returns the 34.